# За каждый проход элементы последовательно сравниваются попарно и,
# если порядок в паре неверный, выполняется перестановка элементов.
# Проходы по массиву повторяются N-1 раз или до тех пор, пока на очередном проходе не окажется,
# что обмены больше не нужны, что означает — массив отсортирован.
# При каждом проходе алгоритма по внутреннему циклу
# очередной наибольший элемент массива ставится на своё место в конце массива рядом с предыдущим наибольшим элементом
# («всплывает» до нужной позиции, как пузырёк в воде),
# а наименьший элемент перемещается на одну позицию к началу массива.


# ------------------------------
# АЛГОРИТМ СОРТИРОВКИ ПУЗЫРЬКОМ
# ------------------------------

def bubble_sort(array):
    N = len(array) #Число элементов в списке

    for i in range(0, N-1): #N-1 итераций работы алгоритма
        for j in range(0, N-1-i): #проход по оставшимся не отсортированным парам массива
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]

    return array


array = [-9, 0, 5, 7, 1, 33, 55, 3, 6, 8, 98, -5, 9, 10, 31, 13]
print(bubble_sort(array))

#Максимальный объём вычислений O(n^2)

#Оптимизация сортировки пузырьком

#Мы можем предотвратить ненужную оценку, используя логический флаг.

def bubble_sort(array):
    flag = True
    N = len(array)

    while (flag):
        flag = False
        for i in range(N-1):
            if array[i] > array[i+1]:
                array[i], array[i+1] = array[i+1], array[i]
                flag = True

    return array

array = [-9, 0, 5, 7, 1, 33, 55, 3, 6, 8, 98, -5, 9, 10, 31, 13]

print(bubble_sort(array))

#В следующей отимизации мы учитываем тот факт, что итерация заканчивается,
# когда самый большой элемент списка оказывается в конце списка.
# В первый раз мы передаем самый большой элемент в конечную позицию, используя позицию n.
# Во второй раз мы проходим через позицию n-1, второй по величине элемент.
# На каждой последующей итерации мы можем сравнивать на один элемент меньше, чем раньше.
# Точнее, на k-й итерации нужно сравнить только первые n – k + 1 элементов

def bubble_sort(array):
    N = len(array)
    flag = True
    total_time = 0

    while (flag):
        flag = False
        for i in range(N - total_time - 1):
            if array[i] > array[i+1]:
                array[i], array[i+1] = array[i+1], array[i]
                flag = True
        total_time += 1
    print("Кол-во итераций: ", total_time)

    return array

array = [-9, 0, 5, 7, 1, 33, 55, 3, 6, 8, 98, -5, 9, 10, 31, 13]
print(bubble_sort(array))
